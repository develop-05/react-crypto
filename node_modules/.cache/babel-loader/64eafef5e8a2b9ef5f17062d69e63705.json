{"ast":null,"code":"import _asyncToGenerator from\"D:/react-crypto/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/react-crypto/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\react-crypto\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{Box,Button,TextField}from\"@material-ui/core\";import{useState}from\"react\";import{CryptoState}from\"../../CryptoContext\";import{auth}from\"../../firebase\";import{signInWithEmailAndPassword}from\"firebase/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(_ref){var handleClose=_ref.handleClose;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isType=_useState6[0],setIsType=_useState6[1];// add show and hide password in AuthModal\nvar _CryptoState=CryptoState(),setAlert=_CryptoState.setAlert;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!email||!password)){_context.next=3;break;}setAlert({open:true,message:\"Заполните поля\",type:\"warning\"});return _context.abrupt(\"return\");case 3:_context.prev=3;_context.next=6;return signInWithEmailAndPassword(auth,email,password);case 6:result=_context.sent;setAlert({open:true,message:\"\\u0423\\u0441\\u043F\\u0435\\u0445. \\u041F\\u0440\\u0438\\u0432\\u0435\\u0442 \".concat(result.user.email),type:\"success\"});handleClose();_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);setAlert({open:true,message:_context.t0.message,type:\"error\"});return _context.abrupt(\"return\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function handleSubmit(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Box,{p:3,style:{display:\"flex\",flexDirection:\"column\",gap:\"20px\"},children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"email\",label:\"Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",label:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:isType?\"password\":\"text\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},fullWidth:true}),/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:\"transparent\",border:\"none\",outline:\"none\",color:\"white\",cursor:\"pointer\"},onClick:function onClick(){return setIsType(!isType);},children:isType?\"Показать пароль\":\"Скрыть пароль\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",onClick:handleSubmit,style:{backgroundColor:\"#EEBC1D\"},children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]});};export default Login;","map":{"version":3,"sources":["D:/react-crypto/src/components/Authentication/Login.jsx"],"names":["Box","Button","TextField","useState","CryptoState","auth","signInWithEmailAndPassword","Login","handleClose","email","setEmail","password","setPassword","isType","setIsType","setAlert","handleSubmit","open","message","type","result","user","display","flexDirection","gap","e","target","value","backgroundColor","border","outline","color","cursor"],"mappings":"wTAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,mBAAvC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,IAAT,KAAqB,gBAArB,CACA,OAASC,0BAAT,KAA2C,eAA3C,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CACjC,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eAEA,eAA4BT,QAAQ,CAAC,IAAD,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eACA;AAEA,iBAAqBV,WAAW,EAAhC,CAAQW,QAAR,cAAQA,QAAR,CAEA,GAAMC,CAAAA,YAAY,2FAAG,mJACf,CAACP,KAAD,EAAU,CAACE,QADI,0BAEjBI,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,gBAFF,CAGPC,IAAI,CAAE,SAHC,CAAD,CAAR,CAFiB,8EAWIb,CAAAA,0BAA0B,CAACD,IAAD,CAAOI,KAAP,CAAcE,QAAd,CAX9B,QAWXS,MAXW,eAYjBL,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,gFAAmBE,MAAM,CAACC,IAAP,CAAYZ,KAA/B,CAFA,CAGPU,IAAI,CAAE,SAHC,CAAD,CAAR,CAMAX,WAAW,GAlBM,iFAoBjBO,QAAQ,CAAC,CACPE,IAAI,CAAE,IADC,CAEPC,OAAO,CAAE,YAAMA,OAFR,CAGPC,IAAI,CAAE,OAHC,CAAD,CAAR,CApBiB,sGAAH,kBAAZH,CAAAA,YAAY,2CAAlB,CA6BA,mBACE,MAAC,GAAD,EACE,CAAC,CAAE,CADL,CAEE,KAAK,CAAE,CACLM,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAGLC,GAAG,CAAE,MAHA,CAFT,wBAQE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,OAHR,CAIE,KAAK,CAAEf,KAJT,CAKE,QAAQ,CAAE,kBAACgB,CAAD,QAAOf,CAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EALZ,CAME,SAAS,KANX,EARF,cAgBE,KAAC,SAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAC,sCAFR,CAGE,IAAI,CAAEd,MAAM,CAAG,UAAH,CAAgB,MAH9B,CAIE,KAAK,CAAEF,QAJT,CAKE,QAAQ,CAAE,kBAACc,CAAD,QAAOb,CAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EALZ,CAME,SAAS,KANX,EAhBF,cAwBE,eAAQ,KAAK,CAAE,CAACC,eAAe,CAAE,aAAlB,CAAiCC,MAAM,CAAE,MAAzC,CAAiDC,OAAO,CAAE,MAA1D,CAAkEC,KAAK,CAAE,OAAzE,CAAkFC,MAAM,CAAE,SAA1F,CAAf,CACE,OAAO,CAAE,yBAAMlB,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EADX,UAEGA,MAAM,CAAG,iBAAH,CAAuB,eAFhC,EAxBF,cA8BE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAEG,YAHX,CAIE,KAAK,CAAE,CAAEY,eAAe,CAAE,SAAnB,CAJT,4CA9BF,GADF,CAyCD,CA/ED,CAiFA,cAAerB,CAAAA,KAAf","sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext\";\nimport { auth } from \"../../firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst Login = ({ handleClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [isType, setIsType] = useState(true);\n  // add show and hide password in AuthModal\n\n  const { setAlert } = CryptoState();\n\n  const handleSubmit = async () => {\n    if (!email || !password) {\n      setAlert({\n        open: true,\n        message: \"Заполните поля\",\n        type: \"warning\",\n      });\n      return;\n    }\n\n    try {\n      const result = await signInWithEmailAndPassword(auth, email, password);\n      setAlert({\n        open: true,\n        message: `Успех. Привет ${result.user.email}`,\n        type: \"success\",\n      });\n\n      handleClose();\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: error.message,\n        type: \"error\",\n      });\n      return;\n    }\n  };\n\n  return (\n    <Box\n      p={3}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"20px\",\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        type=\"email\"\n        label=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        fullWidth\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Пароль\"\n        type={isType ? \"password\" : \"text\"}\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        fullWidth\n      />\n      <button style={{backgroundColor: \"transparent\", border: \"none\", outline: \"none\", color: \"white\", cursor: \"pointer\"}}\n        onClick={() => setIsType(!isType)}>\n        {isType ? \"Показать пароль\" : \"Скрыть пароль\"}\n      </button>\n\n\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleSubmit}\n        style={{ backgroundColor: \"#EEBC1D\" }}\n      >\n        Войти\n      </Button>\n    </Box>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}