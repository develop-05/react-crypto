{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-crypto\\\\src\\\\components\\\\Authentication\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = _ref => {\n  _s();\n\n  let {\n    handleClose\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isType, setIsType] = useState(true); // add show and hide password in AuthModal\n\n  const {\n    setAlert\n  } = CryptoState();\n\n  const handleSubmit = async () => {\n    if (password !== confirmPassword) {\n      setAlert({\n        open: true,\n        message: \"Пароль не совпадает\",\n        type: \"error\"\n      });\n      return;\n    }\n\n    try {\n      const result = await createUserWithEmailAndPassword(auth, email, password);\n      setAlert({\n        open: true,\n        message: `Регистрация завершена. Добро пожаловать ${result.user.email}`,\n        type: \"success\"\n      });\n      handleClose();\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: error.message,\n        type: \"error\"\n      });\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      type: \"email\",\n      label: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: isType ? \"password\" : \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      label: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: isType ? \"password\" : \"text\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        outline: \"none\",\n        color: \"white\",\n        cursor: \"pointer\"\n      },\n      onClick: () => setIsType(!isType),\n      children: isType ? \"Показать пароль\" : \"Скрыть пароль\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      style: {\n        backgroundColor: \"#EEBC1D\"\n      },\n      onClick: handleSubmit,\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"2e2MXPO6GdMNpi2TUtVNkiN6Tjc=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/react-crypto/src/components/Authentication/Signup.jsx"],"names":["Box","Button","TextField","useState","CryptoState","createUserWithEmailAndPassword","auth","Signup","handleClose","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isType","setIsType","setAlert","handleSubmit","open","message","type","result","user","error","display","flexDirection","gap","e","target","value","backgroundColor","border","outline","color","cursor"],"mappings":"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","sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { CryptoState } from \"../../CryptoContext\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\n\nconst Signup = ({ handleClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [isType, setIsType] = useState(true);\n  // add show and hide password in AuthModal\n\n\n  const { setAlert } = CryptoState();\n\n  const handleSubmit = async () => {\n    if (password !== confirmPassword) {\n      setAlert({\n        open: true,\n        message: \"Пароль не совпадает\",\n        type: \"error\",\n      });\n      return;\n    }\n\n    try {\n      const result = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      setAlert({\n        open: true,\n        message: `Регистрация завершена. Добро пожаловать ${result.user.email}`,\n        type: \"success\",\n      });\n\n      handleClose();\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: error.message,\n        type: \"error\",\n      });\n      return;\n    }\n  };\n\n  return (\n    <Box\n      p={3}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"20px\",\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        type=\"email\"\n        label=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        fullWidth\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Пароль\"\n        type={isType ? \"password\" : \"text\"}\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        fullWidth\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Подтвердите пароль\"\n        type={isType ? \"password\" : \"text\"}\n        value={confirmPassword}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n        fullWidth\n      />\n\n      <button style={{backgroundColor: \"transparent\", border: \"none\", outline: \"none\", color: \"white\", cursor: \"pointer\"}}\n        onClick={() => setIsType(!isType)}>\n        {isType ? \"Показать пароль\" : \"Скрыть пароль\"}\n      </button>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        style={{ backgroundColor: \"#EEBC1D\" }}\n        onClick={handleSubmit}\n      >\n        Зарегистрироваться\n      </Button>\n    </Box>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}